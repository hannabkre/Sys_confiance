[comment encoding = UTF-8 /]
[module toDot('http://petrinet')]

[template public petriNetToDot(aPetrinet : Petrinet)]
[comment @main/]
[file (aPetrinet.name.concat('.dot'), false, 'UTF-8')]
digraph [aPetrinet.name/] {

// Définir les formes des transitions en rectangle
    [for (t : Transition | aPetrinet.PetrinetElements->select(e | e.oclIsTypeOf(Transition))->collect(e | e.oclAsType(Transition)))]
    [t.name/] [shape=rectangle];
    [/for]

    // Tu pourrais aussi définir les places en cercle ici, si tu veux :
    //[for (p : Place | aPetrinet.PetrinetElements->select(e | e.oclIsTypeOf(Place))->collect(e | e.oclAsType(Place)))]
    //[p.name/] [shape=circle];
    //[/for]

    // Maintenant les arcs
    [for (arc : Arc | aPetrinet.PetrinetElements->select(e | e.oclIsTypeOf(Arc))->collect(e | e.oclAsType(Arc)))]
    [arc.fromNode.name/] -> [arc.toNode.name/] ['[']/arrowhead=vee label="[arc.arcType.toLabel()/]"[']'/];
    [/for]

}
[/file]
[/template]

[query public toLabel(at : ArcType) : String =

	if at = ArcType::read then 'read'

	else if at = ArcType::normal then 'normal'

	else 'unknown'

	endif

	endif

/]
