/**
 */
package n7.petrinet.impl;

import java.util.Collection;

import n7.petrinet.Arc;
import n7.petrinet.Node;
import n7.petrinet.PetrinetPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectWithInverseResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc --> An implementation of the model object
 * '<em><b>Node</b></em>'. <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 * <li>{@link n7.petrinet.impl.NodeImpl#getInArc <em>In Arc</em>}</li>
 * <li>{@link n7.petrinet.impl.NodeImpl#getOutArc <em>Out Arc</em>}</li>
 * <li>{@link n7.petrinet.impl.NodeImpl#getName <em>Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NodeImpl extends PetrinetElementImpl implements Node {
	/**
	 * The cached value of the '{@link #getInArc() <em>In Arc</em>}' reference list.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @see #getInArc()
	 * @generated
	 * @ordered
	 */
	protected EList<Arc> inArc;

	/**
	 * The cached value of the '{@link #getOutArc() <em>Out Arc</em>}' reference
	 * list. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @see #getOutArc()
	 * @generated
	 * @ordered
	 */
	protected EList<Arc> outArc;

	/**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected static final String NAME_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
	protected String name = NAME_EDEFAULT;

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected NodeImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return PetrinetPackage.Literals.NODE;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public EList<Arc> getInArc() {
		if (inArc == null) {
			inArc = new EObjectWithInverseResolvingEList<Arc>(Arc.class, this, PetrinetPackage.NODE__IN_ARC,
					PetrinetPackage.ARC__FROM_NODE);
		}
		return inArc;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public EList<Arc> getOutArc() {
		if (outArc == null) {
			outArc = new EObjectWithInverseResolvingEList<Arc>(Arc.class, this, PetrinetPackage.NODE__OUT_ARC,
					PetrinetPackage.ARC__TO_NODE);
		}
		return outArc;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public String getName() {
		return name;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public void setName(String newName) {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, PetrinetPackage.NODE__NAME, oldName, name));
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
		case PetrinetPackage.NODE__IN_ARC:
			return ((InternalEList<InternalEObject>) (InternalEList<?>) getInArc()).basicAdd(otherEnd, msgs);
		case PetrinetPackage.NODE__OUT_ARC:
			return ((InternalEList<InternalEObject>) (InternalEList<?>) getOutArc()).basicAdd(otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
		case PetrinetPackage.NODE__IN_ARC:
			return ((InternalEList<?>) getInArc()).basicRemove(otherEnd, msgs);
		case PetrinetPackage.NODE__OUT_ARC:
			return ((InternalEList<?>) getOutArc()).basicRemove(otherEnd, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
		case PetrinetPackage.NODE__IN_ARC:
			return getInArc();
		case PetrinetPackage.NODE__OUT_ARC:
			return getOutArc();
		case PetrinetPackage.NODE__NAME:
			return getName();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
		case PetrinetPackage.NODE__IN_ARC:
			getInArc().clear();
			getInArc().addAll((Collection<? extends Arc>) newValue);
			return;
		case PetrinetPackage.NODE__OUT_ARC:
			getOutArc().clear();
			getOutArc().addAll((Collection<? extends Arc>) newValue);
			return;
		case PetrinetPackage.NODE__NAME:
			setName((String) newValue);
			return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
		case PetrinetPackage.NODE__IN_ARC:
			getInArc().clear();
			return;
		case PetrinetPackage.NODE__OUT_ARC:
			getOutArc().clear();
			return;
		case PetrinetPackage.NODE__NAME:
			setName(NAME_EDEFAULT);
			return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
		case PetrinetPackage.NODE__IN_ARC:
			return inArc != null && !inArc.isEmpty();
		case PetrinetPackage.NODE__OUT_ARC:
			return outArc != null && !outArc.isEmpty();
		case PetrinetPackage.NODE__NAME:
			return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy())
			return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(')');
		return result.toString();
	}

} // NodeImpl
